syntax = "proto3";

package reliablenetpb;

option go_package = "github.com/filecoin-project/mir/pkg/pb/reliablenetpb";

import "messagepb/messagepb.proto";

import "mir/codegen_extensions.proto";

// ============================================================
// Events
// ============================================================

message Event {
  option (mir.event_class) = true;

  oneof type {
    option (mir.event_type) = true;

    SendMessage         send_message           = 1;
    Ack                 ack                    = 2;
    MarkRecvd           mark_recvd             = 3;
    MarkModuleMsgsRecvd mark_module_msgs_recvd = 4;
    RetransmitAll       retransmit_all         = 5;
  }
}

message SendMessage {
  option (mir.event) = true;

  messagepb.Message msg          = 1;
  repeated string   destinations = 2 [(mir.type) = "github.com/filecoin-project/mir/pkg/types.NodeID"];
  bytes             msg_id       = 3;
}

message Ack {
  option (mir.event) = true;

  string dest_module = 1 [(mir.type) = "github.com/filecoin-project/mir/pkg/types.ModuleID"];
  bytes  msg_id      = 2;
  string source      = 3 [(mir.type) = "github.com/filecoin-project/mir/pkg/types.NodeID"];
}

message MarkModuleMsgsRecvd {
  option (mir.event) = true;

  string          dest_module  = 1 [(mir.type) = "github.com/filecoin-project/mir/pkg/types.ModuleID"];
  repeated string destinations = 2 [(mir.type) = "github.com/filecoin-project/mir/pkg/types.NodeID"];
}

message MarkRecvd {
  option (mir.event) = true;

  string          dest_module  = 1 [(mir.type) = "github.com/filecoin-project/mir/pkg/types.ModuleID"];
  bytes           msg_id       = 2;
  repeated string destinations = 3 [(mir.type) = "github.com/filecoin-project/mir/pkg/types.NodeID"];
}

message RetransmitAll {
  option (mir.event) = true;
}
