syntax = "proto3";

package aleapb.bcqueuepb;

option go_package = "github.com/filecoin-project/mir/pkg/pb/aleapb/bcqueuepb";

import "aleapb/common/common.proto";
import "requestpb/requestpb.proto";
import "contextstorepb/contextstorepb.proto";
import "dslpb/dslpb.proto";

import "mir/codegen_extensions.proto";


// ============================================================
// Events
// ============================================================

message Event {
  option (mir.event_class) = true;

  oneof type {
    option (mir.event_type) = true;

    InputValue input_value = 1;
    Deliver    deliver     = 2;
    FreeSlot   free_slot   = 3;
    SlotFreed  slot_freed  = 4;
  }
}

message InputValue {
  option (mir.event) = true;

  common.Slot slot = 1;

  // empty txs represents a request to listen for VCB (and deliver what was broadcast to us)
  repeated requestpb.Request txs = 2;
}


message Deliver {
  option (mir.event) = true;

  common.Slot slot = 1;
}

message FreeSlot {
  option (mir.event) = true;

  uint64 queue_slot = 1 [(mir.type) = "github.com/filecoin-project/mir/pkg/alea/aleatypes.QueueSlot"];

  FreeSlotOrigin origin = 2 [(mir.origin_request) = true];
}

message SlotFreed {
  option (mir.event) = true;

  FreeSlotOrigin origin = 1 [(mir.origin_response) = true];
}

// ============================================================
// Data structures
// ============================================================
message FreeSlotOrigin {
  option (mir.struct) = true;

  string module = 1 [(mir.type) = "github.com/filecoin-project/mir/pkg/types.ModuleID"];
  oneof Type {
    contextstorepb.Origin context_store = 2;
    dslpb.Origin          dsl           = 3;
  }
}

message VcbOrigin {
  option (mir.struct) = true;

  uint64 queue_slot = 1 [(mir.type) = "github.com/filecoin-project/mir/pkg/alea/aleatypes.QueueSlot"];
}
