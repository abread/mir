syntax = "proto3";

package aleapb.bcqueuepb;

option go_package = "github.com/filecoin-project/mir/pkg/pb/aleapb/bcqueuepb";

import "aleapb/common/common.proto";
import "trantorpb/trantorpb.proto";

import "mir/codegen_extensions.proto";


// ============================================================
// Events
// ============================================================

message Event {
  option (mir.event_class) = true;

  oneof type {
    option (mir.event_type) = true;

    InputValue   input_value    = 1;
    Deliver      deliver        = 2;
    FreeSlot     free_slot      = 3;
    PastVcbFinal past_vcb_final = 4;
    BcStarted    bc_started     = 5;
    BcDone       bc_done        = 6;
  }
}

message InputValue {
  option (mir.event) = true;

  uint64 queue_slot = 1 [(mir.type) = "github.com/filecoin-project/mir/pkg/alea/aleatypes.QueueSlot"];

  // empty txs represents a request to listen for VCB (and deliver what was broadcast to us)
  repeated trantorpb.Transaction txs = 2;
}


message Deliver {
  option (mir.event) = true;

  common.Slot slot = 1;
}

message FreeSlot {
  option (mir.event) = true;

  uint64 queue_slot = 1 [(mir.type) = "github.com/filecoin-project/mir/pkg/alea/aleatypes.QueueSlot"];
}

message PastVcbFinal {
  option (mir.event) = true;

  uint64                         queue_slot      = 1 [(mir.type) = "github.com/filecoin-project/mir/pkg/alea/aleatypes.QueueSlot"];
  repeated trantorpb.Transaction txs             = 2;
  bytes                          signature       = 3 [(mir.type) = "github.com/filecoin-project/mir/pkg/threshcrypto/tctypes.FullSig"];
}

message BcStarted {
  option (mir.event) = true;

  common.Slot slot = 1;
}

message BcDone {
  option (mir.event) = true;

  common.Slot slot          = 1;
  int64       deliver_delta = 2 [(mir.type) = "time.Duration"];
}
