syntax = "proto3";

package modringpb;

option go_package = "github.com/filecoin-project/mir/pkg/pb/modringpb";

import "messagepb/messagepb.proto";
import "contextstorepb/contextstorepb.proto";
import "dslpb/dslpb.proto";

import "mir/codegen_extensions.proto";

// ============================================================
// Events
// ============================================================

message Event {
  option (mir.event_class) = true;

  oneof type {
    option (mir.event_type) = true;

    FreeSubmodule     free                = 1;
    FreedSubmodule    freed               = 2;
    PastMessagesRecvd past_messages_recvd = 3;
  }
}

message FreeSubmodule {
  option (mir.event) = true;

  uint64 id = 1;

  FreeSubmoduleOrigin origin = 2 [(mir.origin_request) = true];
}

message FreedSubmodule {
  option (mir.event) = true;

  FreeSubmoduleOrigin origin = 1 [(mir.origin_response) = true];
}

message PastMessagesRecvd {
  option (mir.event) = true;

  repeated PastMessage messages = 1;
}

message PastMessage {
  option (mir.struct) = true;

  uint64            dest_id = 1;
  string            from    = 2 [(mir.type) = "github.com/filecoin-project/mir/pkg/types.NodeID"];
  messagepb.Message message = 3;
}


// ============================================================
// Data structures
// ============================================================
message FreeSubmoduleOrigin {
  option (mir.struct) = true;

  string module = 1 [(mir.type) = "github.com/filecoin-project/mir/pkg/types.ModuleID"];
  oneof Type {
    contextstorepb.Origin context_store = 2;
    dslpb.Origin          dsl           = 3;
  }
}
