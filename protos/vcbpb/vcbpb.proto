syntax = "proto3";

package vcbpb;

option go_package = "github.com/filecoin-project/mir/pkg/pb/vcbpb";

import "requestpb/requestpb.proto";

import "mir/codegen_extensions.proto";
import "net/codegen_extensions.proto";


// ============================================================
// Events
// ============================================================

message Event {
  option (mir.event_class) = true;

  oneof type {
    option (mir.event_type) = true;

    InputValue input_value = 1;
    Deliver    deliver     = 2;
  }
}

message InputValue {
  option (mir.event) = true;

  // empty txs represents a request to listen for VCB (and deliver what was broadcast to us)
  repeated requestpb.Request txs = 1;
}

message Deliver {
  option (mir.event) = true;

  repeated requestpb.Request txs             = 1;
  repeated bytes             tx_ids          = 2 [(mir.type) = "github.com/filecoin-project/mir/pkg/types.TxID"];
  bytes                      signature       = 3 [(mir.type) = "github.com/filecoin-project/mir/pkg/threshcrypto/tctypes.FullSig"];

  string src_module = 4 [(mir.type) = "github.com/filecoin-project/mir/pkg/types.ModuleID"];
}

// ============================================================
// Messages
// ============================================================

message Message {
  option (net.message_class) = true;

  oneof type {
    option (net.message_type) = true;

    SendMessage  send_message  = 1;
    EchoMessage  echo_message  = 2;
    FinalMessage final_message = 3;
  }
}

message SendMessage {
  option (net.message) = true;

  repeated requestpb.Request txs = 1;
}

message EchoMessage {
  option (net.message) = true;

  bytes signature_share = 1 [(mir.type) = "github.com/filecoin-project/mir/pkg/threshcrypto/tctypes.SigShare"];
}

message FinalMessage {
  option (net.message) = true;

  repeated requestpb.Request txs       = 1;
  bytes                      signature = 2 [(mir.type) = "github.com/filecoin-project/mir/pkg/threshcrypto/tctypes.FullSig"];
}
