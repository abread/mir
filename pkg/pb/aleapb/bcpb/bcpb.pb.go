// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.1
// 	protoc        v3.21.12
// source: aleapb/bcpb/bcpb.proto

package bcpb

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"

	_ "github.com/filecoin-project/mir/pkg/pb/mir"
	_ "github.com/filecoin-project/mir/pkg/pb/net"
	trantorpb "github.com/filecoin-project/mir/pkg/pb/trantorpb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*Event_RequestCert
	//	*Event_DeliverCert
	//	*Event_BcStarted
	//	*Event_FreeSlot
	//	*Event_EstimateUpdate
	//	*Event_FillGap
	//	*Event_MarkStable
	Type isEvent_Type `protobuf_oneof:"type"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aleapb_bcpb_bcpb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_aleapb_bcpb_bcpb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_aleapb_bcpb_bcpb_proto_rawDescGZIP(), []int{0}
}

func (m *Event) GetType() isEvent_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Event) GetRequestCert() *RequestCert {
	if x, ok := x.GetType().(*Event_RequestCert); ok {
		return x.RequestCert
	}
	return nil
}

func (x *Event) GetDeliverCert() *DeliverCert {
	if x, ok := x.GetType().(*Event_DeliverCert); ok {
		return x.DeliverCert
	}
	return nil
}

func (x *Event) GetBcStarted() *BcStarted {
	if x, ok := x.GetType().(*Event_BcStarted); ok {
		return x.BcStarted
	}
	return nil
}

func (x *Event) GetFreeSlot() *FreeSlot {
	if x, ok := x.GetType().(*Event_FreeSlot); ok {
		return x.FreeSlot
	}
	return nil
}

func (x *Event) GetEstimateUpdate() *EstimateUpdate {
	if x, ok := x.GetType().(*Event_EstimateUpdate); ok {
		return x.EstimateUpdate
	}
	return nil
}

func (x *Event) GetFillGap() *DoFillGap {
	if x, ok := x.GetType().(*Event_FillGap); ok {
		return x.FillGap
	}
	return nil
}

func (x *Event) GetMarkStable() *MarkStableProposal {
	if x, ok := x.GetType().(*Event_MarkStable); ok {
		return x.MarkStable
	}
	return nil
}

type isEvent_Type interface {
	isEvent_Type()
}

type Event_RequestCert struct {
	RequestCert *RequestCert `protobuf:"bytes,1,opt,name=request_cert,json=requestCert,proto3,oneof"`
}

type Event_DeliverCert struct {
	DeliverCert *DeliverCert `protobuf:"bytes,2,opt,name=deliver_cert,json=deliverCert,proto3,oneof"`
}

type Event_BcStarted struct {
	BcStarted *BcStarted `protobuf:"bytes,3,opt,name=bc_started,json=bcStarted,proto3,oneof"`
}

type Event_FreeSlot struct {
	FreeSlot *FreeSlot `protobuf:"bytes,4,opt,name=free_slot,json=freeSlot,proto3,oneof"`
}

type Event_EstimateUpdate struct {
	EstimateUpdate *EstimateUpdate `protobuf:"bytes,5,opt,name=estimate_update,json=estimateUpdate,proto3,oneof"`
}

type Event_FillGap struct {
	FillGap *DoFillGap `protobuf:"bytes,6,opt,name=fill_gap,json=fillGap,proto3,oneof"`
}

type Event_MarkStable struct {
	MarkStable *MarkStableProposal `protobuf:"bytes,7,opt,name=mark_stable,json=markStable,proto3,oneof"`
}

func (*Event_RequestCert) isEvent_Type() {}

func (*Event_DeliverCert) isEvent_Type() {}

func (*Event_BcStarted) isEvent_Type() {}

func (*Event_FreeSlot) isEvent_Type() {}

func (*Event_EstimateUpdate) isEvent_Type() {}

func (*Event_FillGap) isEvent_Type() {}

func (*Event_MarkStable) isEvent_Type() {}

type RequestCert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RequestCert) Reset() {
	*x = RequestCert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aleapb_bcpb_bcpb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestCert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestCert) ProtoMessage() {}

func (x *RequestCert) ProtoReflect() protoreflect.Message {
	mi := &file_aleapb_bcpb_bcpb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestCert.ProtoReflect.Descriptor instead.
func (*RequestCert) Descriptor() ([]byte, []int) {
	return file_aleapb_bcpb_bcpb_proto_rawDescGZIP(), []int{1}
}

type DeliverCert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This is a separate event from availabilitypb's to avoid the unused origin parameter
	// Alea's certificates are generated on demand for local transactions, and by external node's broadcasts
	Cert *Cert `protobuf:"bytes,1,opt,name=cert,proto3" json:"cert,omitempty"`
}

func (x *DeliverCert) Reset() {
	*x = DeliverCert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aleapb_bcpb_bcpb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliverCert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliverCert) ProtoMessage() {}

func (x *DeliverCert) ProtoReflect() protoreflect.Message {
	mi := &file_aleapb_bcpb_bcpb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliverCert.ProtoReflect.Descriptor instead.
func (*DeliverCert) Descriptor() ([]byte, []int) {
	return file_aleapb_bcpb_bcpb_proto_rawDescGZIP(), []int{2}
}

func (x *DeliverCert) GetCert() *Cert {
	if x != nil {
		return x.Cert
	}
	return nil
}

type BcStarted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot *Slot `protobuf:"bytes,1,opt,name=slot,proto3" json:"slot,omitempty"`
}

func (x *BcStarted) Reset() {
	*x = BcStarted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aleapb_bcpb_bcpb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BcStarted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BcStarted) ProtoMessage() {}

func (x *BcStarted) ProtoReflect() protoreflect.Message {
	mi := &file_aleapb_bcpb_bcpb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BcStarted.ProtoReflect.Descriptor instead.
func (*BcStarted) Descriptor() ([]byte, []int) {
	return file_aleapb_bcpb_bcpb_proto_rawDescGZIP(), []int{3}
}

func (x *BcStarted) GetSlot() *Slot {
	if x != nil {
		return x.Slot
	}
	return nil
}

type FreeSlot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot *Slot `protobuf:"bytes,1,opt,name=slot,proto3" json:"slot,omitempty"`
}

func (x *FreeSlot) Reset() {
	*x = FreeSlot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aleapb_bcpb_bcpb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FreeSlot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreeSlot) ProtoMessage() {}

func (x *FreeSlot) ProtoReflect() protoreflect.Message {
	mi := &file_aleapb_bcpb_bcpb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreeSlot.ProtoReflect.Descriptor instead.
func (*FreeSlot) Descriptor() ([]byte, []int) {
	return file_aleapb_bcpb_bcpb_proto_rawDescGZIP(), []int{4}
}

func (x *FreeSlot) GetSlot() *Slot {
	if x != nil {
		return x.Slot
	}
	return nil
}

type EstimateUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// estimated worst-case duration for broadcasts of local transactions, accounting for time for remote
	// nodes to receive the final message and verify it.
	MaxOwnBcDuration int64 `protobuf:"varint,1,opt,name=maxOwnBcDuration,proto3" json:"maxOwnBcDuration,omitempty"`
	// estimated worst-case duration for broadcasts of local transactions, excluding time for remote
	// nodes to receive the final message and verify it.
	MaxOwnBcLocalDuration int64 `protobuf:"varint,3,opt,name=maxOwnBcLocalDuration,proto3" json:"maxOwnBcLocalDuration,omitempty"`
	// estimated worst-case duration for incoming transactions from remote nodes
	MaxExtBcDuration int64 `protobuf:"varint,2,opt,name=maxExtBcDuration,proto3" json:"maxExtBcDuration,omitempty"`
}

func (x *EstimateUpdate) Reset() {
	*x = EstimateUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aleapb_bcpb_bcpb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstimateUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateUpdate) ProtoMessage() {}

func (x *EstimateUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_aleapb_bcpb_bcpb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateUpdate.ProtoReflect.Descriptor instead.
func (*EstimateUpdate) Descriptor() ([]byte, []int) {
	return file_aleapb_bcpb_bcpb_proto_rawDescGZIP(), []int{5}
}

func (x *EstimateUpdate) GetMaxOwnBcDuration() int64 {
	if x != nil {
		return x.MaxOwnBcDuration
	}
	return 0
}

func (x *EstimateUpdate) GetMaxOwnBcLocalDuration() int64 {
	if x != nil {
		return x.MaxOwnBcLocalDuration
	}
	return 0
}

func (x *EstimateUpdate) GetMaxExtBcDuration() int64 {
	if x != nil {
		return x.MaxExtBcDuration
	}
	return 0
}

type DoFillGap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot *Slot `protobuf:"bytes,1,opt,name=slot,proto3" json:"slot,omitempty"`
}

func (x *DoFillGap) Reset() {
	*x = DoFillGap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aleapb_bcpb_bcpb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoFillGap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoFillGap) ProtoMessage() {}

func (x *DoFillGap) ProtoReflect() protoreflect.Message {
	mi := &file_aleapb_bcpb_bcpb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoFillGap.ProtoReflect.Descriptor instead.
func (*DoFillGap) Descriptor() ([]byte, []int) {
	return file_aleapb_bcpb_bcpb_proto_rawDescGZIP(), []int{6}
}

func (x *DoFillGap) GetSlot() *Slot {
	if x != nil {
		return x.Slot
	}
	return nil
}

type MarkStableProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot *Slot `protobuf:"bytes,1,opt,name=slot,proto3" json:"slot,omitempty"`
}

func (x *MarkStableProposal) Reset() {
	*x = MarkStableProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aleapb_bcpb_bcpb_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkStableProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkStableProposal) ProtoMessage() {}

func (x *MarkStableProposal) ProtoReflect() protoreflect.Message {
	mi := &file_aleapb_bcpb_bcpb_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkStableProposal.ProtoReflect.Descriptor instead.
func (*MarkStableProposal) Descriptor() ([]byte, []int) {
	return file_aleapb_bcpb_bcpb_proto_rawDescGZIP(), []int{7}
}

func (x *MarkStableProposal) GetSlot() *Slot {
	if x != nil {
		return x.Slot
	}
	return nil
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*Message_FillGapMessage
	//	*Message_FillerMessage
	Type isMessage_Type `protobuf_oneof:"type"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aleapb_bcpb_bcpb_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_aleapb_bcpb_bcpb_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_aleapb_bcpb_bcpb_proto_rawDescGZIP(), []int{8}
}

func (m *Message) GetType() isMessage_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Message) GetFillGapMessage() *FillGapMessage {
	if x, ok := x.GetType().(*Message_FillGapMessage); ok {
		return x.FillGapMessage
	}
	return nil
}

func (x *Message) GetFillerMessage() *FillerMessage {
	if x, ok := x.GetType().(*Message_FillerMessage); ok {
		return x.FillerMessage
	}
	return nil
}

type isMessage_Type interface {
	isMessage_Type()
}

type Message_FillGapMessage struct {
	FillGapMessage *FillGapMessage `protobuf:"bytes,1,opt,name=fill_gap_message,json=fillGapMessage,proto3,oneof"`
}

type Message_FillerMessage struct {
	FillerMessage *FillerMessage `protobuf:"bytes,2,opt,name=filler_message,json=fillerMessage,proto3,oneof"`
}

func (*Message_FillGapMessage) isMessage_Type() {}

func (*Message_FillerMessage) isMessage_Type() {}

type FillGapMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot *Slot `protobuf:"bytes,1,opt,name=slot,proto3" json:"slot,omitempty"`
}

func (x *FillGapMessage) Reset() {
	*x = FillGapMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aleapb_bcpb_bcpb_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FillGapMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FillGapMessage) ProtoMessage() {}

func (x *FillGapMessage) ProtoReflect() protoreflect.Message {
	mi := &file_aleapb_bcpb_bcpb_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FillGapMessage.ProtoReflect.Descriptor instead.
func (*FillGapMessage) Descriptor() ([]byte, []int) {
	return file_aleapb_bcpb_bcpb_proto_rawDescGZIP(), []int{9}
}

func (x *FillGapMessage) GetSlot() *Slot {
	if x != nil {
		return x.Slot
	}
	return nil
}

type FillerMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cert *Cert                    `protobuf:"bytes,1,opt,name=cert,proto3" json:"cert,omitempty"`
	Txs  []*trantorpb.Transaction `protobuf:"bytes,2,rep,name=txs,proto3" json:"txs,omitempty"`
}

func (x *FillerMessage) Reset() {
	*x = FillerMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aleapb_bcpb_bcpb_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FillerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FillerMessage) ProtoMessage() {}

func (x *FillerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_aleapb_bcpb_bcpb_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FillerMessage.ProtoReflect.Descriptor instead.
func (*FillerMessage) Descriptor() ([]byte, []int) {
	return file_aleapb_bcpb_bcpb_proto_rawDescGZIP(), []int{10}
}

func (x *FillerMessage) GetCert() *Cert {
	if x != nil {
		return x.Cert
	}
	return nil
}

func (x *FillerMessage) GetTxs() []*trantorpb.Transaction {
	if x != nil {
		return x.Txs
	}
	return nil
}

type Slot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueueIdx  uint32 `protobuf:"varint,1,opt,name=queue_idx,json=queueIdx,proto3" json:"queue_idx,omitempty"`
	QueueSlot uint64 `protobuf:"varint,2,opt,name=queue_slot,json=queueSlot,proto3" json:"queue_slot,omitempty"`
}

func (x *Slot) Reset() {
	*x = Slot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aleapb_bcpb_bcpb_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Slot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Slot) ProtoMessage() {}

func (x *Slot) ProtoReflect() protoreflect.Message {
	mi := &file_aleapb_bcpb_bcpb_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Slot.ProtoReflect.Descriptor instead.
func (*Slot) Descriptor() ([]byte, []int) {
	return file_aleapb_bcpb_bcpb_proto_rawDescGZIP(), []int{11}
}

func (x *Slot) GetQueueIdx() uint32 {
	if x != nil {
		return x.QueueIdx
	}
	return 0
}

func (x *Slot) GetQueueSlot() uint64 {
	if x != nil {
		return x.QueueSlot
	}
	return 0
}

// Availability certificate
type Cert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot      *Slot  `protobuf:"bytes,1,opt,name=slot,proto3" json:"slot,omitempty"`
	BatchId   string `protobuf:"bytes,2,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
	Signature []byte `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *Cert) Reset() {
	*x = Cert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aleapb_bcpb_bcpb_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cert) ProtoMessage() {}

func (x *Cert) ProtoReflect() protoreflect.Message {
	mi := &file_aleapb_bcpb_bcpb_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cert.ProtoReflect.Descriptor instead.
func (*Cert) Descriptor() ([]byte, []int) {
	return file_aleapb_bcpb_bcpb_proto_rawDescGZIP(), []int{12}
}

func (x *Cert) GetSlot() *Slot {
	if x != nil {
		return x.Slot
	}
	return nil
}

func (x *Cert) GetBatchId() string {
	if x != nil {
		return x.BatchId
	}
	return ""
}

func (x *Cert) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

var File_aleapb_bcpb_bcpb_proto protoreflect.FileDescriptor

var file_aleapb_bcpb_bcpb_proto_rawDesc = []byte{
	0x0a, 0x16, 0x61, 0x6c, 0x65, 0x61, 0x70, 0x62, 0x2f, 0x62, 0x63, 0x70, 0x62, 0x2f, 0x62, 0x63,
	0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x61, 0x6c, 0x65, 0x61, 0x70, 0x62,
	0x2e, 0x62, 0x63, 0x70, 0x62, 0x1a, 0x19, 0x74, 0x72, 0x61, 0x6e, 0x74, 0x6f, 0x72, 0x70, 0x62,
	0x2f, 0x74, 0x72, 0x61, 0x6e, 0x74, 0x6f, 0x72, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1c, 0x6d, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x67, 0x65, 0x6e, 0x5f, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c,
	0x6e, 0x65, 0x74, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x67, 0x65, 0x6e, 0x5f, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc9, 0x03, 0x0a,
	0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61,
	0x6c, 0x65, 0x61, 0x70, 0x62, 0x2e, 0x62, 0x63, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x43, 0x65, 0x72, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x43, 0x65, 0x72, 0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x5f, 0x63, 0x65, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x6c,
	0x65, 0x61, 0x70, 0x62, 0x2e, 0x62, 0x63, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x43, 0x65, 0x72, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x43, 0x65, 0x72, 0x74, 0x12, 0x37, 0x0a, 0x0a, 0x62, 0x63, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6c, 0x65, 0x61, 0x70,
	0x62, 0x2e, 0x62, 0x63, 0x70, 0x62, 0x2e, 0x42, 0x63, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64,
	0x48, 0x00, 0x52, 0x09, 0x62, 0x63, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x34, 0x0a,
	0x09, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x61, 0x6c, 0x65, 0x61, 0x70, 0x62, 0x2e, 0x62, 0x63, 0x70, 0x62, 0x2e, 0x46,
	0x72, 0x65, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x48, 0x00, 0x52, 0x08, 0x66, 0x72, 0x65, 0x65, 0x53,
	0x6c, 0x6f, 0x74, 0x12, 0x46, 0x0a, 0x0f, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61,
	0x6c, 0x65, 0x61, 0x70, 0x62, 0x2e, 0x62, 0x63, 0x70, 0x62, 0x2e, 0x45, 0x73, 0x74, 0x69, 0x6d,
	0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x65, 0x73, 0x74,
	0x69, 0x6d, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x66,
	0x69, 0x6c, 0x6c, 0x5f, 0x67, 0x61, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x61, 0x6c, 0x65, 0x61, 0x70, 0x62, 0x2e, 0x62, 0x63, 0x70, 0x62, 0x2e, 0x44, 0x6f, 0x46, 0x69,
	0x6c, 0x6c, 0x47, 0x61, 0x70, 0x48, 0x00, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x6c, 0x47, 0x61, 0x70,
	0x12, 0x42, 0x0a, 0x0b, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x6c, 0x65, 0x61, 0x70, 0x62, 0x2e, 0x62,
	0x63, 0x70, 0x62, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x61, 0x72, 0x6b, 0x53, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x3a, 0x04, 0x90, 0xa6, 0x1d, 0x01, 0x42, 0x0c, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x04, 0x80, 0xa6, 0x1d, 0x01, 0x22, 0x13, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x43, 0x65, 0x72, 0x74, 0x3a, 0x04, 0x98, 0xa6, 0x1d, 0x01, 0x22, 0x3a, 0x0a,
	0x0b, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x43, 0x65, 0x72, 0x74, 0x12, 0x25, 0x0a, 0x04,
	0x63, 0x65, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x6c, 0x65,
	0x61, 0x70, 0x62, 0x2e, 0x62, 0x63, 0x70, 0x62, 0x2e, 0x43, 0x65, 0x72, 0x74, 0x52, 0x04, 0x63,
	0x65, 0x72, 0x74, 0x3a, 0x04, 0x98, 0xa6, 0x1d, 0x01, 0x22, 0x38, 0x0a, 0x09, 0x42, 0x63, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x6c, 0x65, 0x61, 0x70, 0x62, 0x2e, 0x62, 0x63,
	0x70, 0x62, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x3a, 0x04, 0x98,
	0xa6, 0x1d, 0x01, 0x22, 0x37, 0x0a, 0x08, 0x46, 0x72, 0x65, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x12,
	0x25, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x61, 0x6c, 0x65, 0x61, 0x70, 0x62, 0x2e, 0x62, 0x63, 0x70, 0x62, 0x2e, 0x53, 0x6c, 0x6f, 0x74,
	0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x3a, 0x04, 0x98, 0xa6, 0x1d, 0x01, 0x22, 0xdd, 0x01, 0x0a,
	0x0e, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x3d, 0x0a, 0x10, 0x6d, 0x61, 0x78, 0x4f, 0x77, 0x6e, 0x42, 0x63, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x11, 0x82, 0xa6, 0x1d, 0x0d, 0x74,
	0x69, 0x6d, 0x65, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x6d, 0x61,
	0x78, 0x4f, 0x77, 0x6e, 0x42, 0x63, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x47,
	0x0a, 0x15, 0x6d, 0x61, 0x78, 0x4f, 0x77, 0x6e, 0x42, 0x63, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x11, 0x82,
	0xa6, 0x1d, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x15, 0x6d, 0x61, 0x78, 0x4f, 0x77, 0x6e, 0x42, 0x63, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x10, 0x6d, 0x61, 0x78, 0x45, 0x78,
	0x74, 0x42, 0x63, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x11, 0x82, 0xa6, 0x1d, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x6d, 0x61, 0x78, 0x45, 0x78, 0x74, 0x42, 0x63, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x04, 0x98, 0xa6, 0x1d, 0x01, 0x22, 0x38, 0x0a, 0x09,
	0x44, 0x6f, 0x46, 0x69, 0x6c, 0x6c, 0x47, 0x61, 0x70, 0x12, 0x25, 0x0a, 0x04, 0x73, 0x6c, 0x6f,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x6c, 0x65, 0x61, 0x70, 0x62,
	0x2e, 0x62, 0x63, 0x70, 0x62, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74,
	0x3a, 0x04, 0x98, 0xa6, 0x1d, 0x01, 0x22, 0x41, 0x0a, 0x12, 0x4d, 0x61, 0x72, 0x6b, 0x53, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x25, 0x0a, 0x04,
	0x73, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x6c, 0x65,
	0x61, 0x70, 0x62, 0x2e, 0x62, 0x63, 0x70, 0x62, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x04, 0x73,
	0x6c, 0x6f, 0x74, 0x3a, 0x04, 0x98, 0xa6, 0x1d, 0x01, 0x22, 0xab, 0x01, 0x0a, 0x07, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x47, 0x0a, 0x10, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x67, 0x61,
	0x70, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x61, 0x6c, 0x65, 0x61, 0x70, 0x62, 0x2e, 0x62, 0x63, 0x70, 0x62, 0x2e, 0x46, 0x69,
	0x6c, 0x6c, 0x47, 0x61, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0e,
	0x66, 0x69, 0x6c, 0x6c, 0x47, 0x61, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x43,
	0x0a, 0x0e, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x6c, 0x65, 0x61, 0x70, 0x62, 0x2e,
	0x62, 0x63, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x6c, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x3a, 0x04, 0xc8, 0xe4, 0x1d, 0x01, 0x42, 0x0c, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x04, 0xc8, 0xe4, 0x1d, 0x01, 0x22, 0x3d, 0x0a, 0x0e, 0x46, 0x69, 0x6c, 0x6c, 0x47,
	0x61, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x73, 0x6c, 0x6f,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x6c, 0x65, 0x61, 0x70, 0x62,
	0x2e, 0x62, 0x63, 0x70, 0x62, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74,
	0x3a, 0x04, 0xd0, 0xe4, 0x1d, 0x01, 0x22, 0x66, 0x0a, 0x0d, 0x46, 0x69, 0x6c, 0x6c, 0x65, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x63, 0x65, 0x72, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x6c, 0x65, 0x61, 0x70, 0x62, 0x2e, 0x62,
	0x63, 0x70, 0x62, 0x2e, 0x43, 0x65, 0x72, 0x74, 0x52, 0x04, 0x63, 0x65, 0x72, 0x74, 0x12, 0x28,
	0x0a, 0x03, 0x74, 0x78, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x72,
	0x61, 0x6e, 0x74, 0x6f, 0x72, 0x70, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x03, 0x74, 0x78, 0x73, 0x3a, 0x04, 0xd0, 0xe4, 0x1d, 0x01, 0x22, 0xcb,
	0x01, 0x0a, 0x04, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x5c, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x5f, 0x69, 0x64, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x3f, 0x82, 0xa6, 0x1d, 0x3b,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x63,
	0x6f, 0x69, 0x6e, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x6d, 0x69, 0x72, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x61, 0x6c, 0x65, 0x61, 0x2f, 0x61, 0x6c, 0x65, 0x61, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x78, 0x52, 0x08, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x49, 0x64, 0x78, 0x12, 0x5f, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x73,
	0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x40, 0x82, 0xa6, 0x1d, 0x3c, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x63, 0x6f,
	0x69, 0x6e, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x6d, 0x69, 0x72, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x61, 0x6c, 0x65, 0x61, 0x2f, 0x61, 0x6c, 0x65, 0x61, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x09, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x3a, 0x04, 0x80, 0xa6, 0x1d, 0x01, 0x22, 0xb2, 0x01, 0x0a,
	0x04, 0x43, 0x65, 0x72, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x6c, 0x65, 0x61, 0x70, 0x62, 0x2e, 0x62, 0x63, 0x70,
	0x62, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x62, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x62, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x44, 0x82, 0xa6, 0x1d, 0x40,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x63,
	0x6f, 0x69, 0x6e, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x6d, 0x69, 0x72, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x2f, 0x74, 0x63, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x46, 0x75, 0x6c, 0x6c, 0x53, 0x69, 0x67,
	0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x3a, 0x04, 0x80, 0xa6, 0x1d,
	0x01, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x66, 0x69, 0x6c, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x2f, 0x6d, 0x69, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x2f, 0x61, 0x6c, 0x65, 0x61,
	0x70, 0x62, 0x2f, 0x62, 0x63, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_aleapb_bcpb_bcpb_proto_rawDescOnce sync.Once
	file_aleapb_bcpb_bcpb_proto_rawDescData = file_aleapb_bcpb_bcpb_proto_rawDesc
)

func file_aleapb_bcpb_bcpb_proto_rawDescGZIP() []byte {
	file_aleapb_bcpb_bcpb_proto_rawDescOnce.Do(func() {
		file_aleapb_bcpb_bcpb_proto_rawDescData = protoimpl.X.CompressGZIP(file_aleapb_bcpb_bcpb_proto_rawDescData)
	})
	return file_aleapb_bcpb_bcpb_proto_rawDescData
}

var file_aleapb_bcpb_bcpb_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_aleapb_bcpb_bcpb_proto_goTypes = []interface{}{
	(*Event)(nil),                 // 0: aleapb.bcpb.Event
	(*RequestCert)(nil),           // 1: aleapb.bcpb.RequestCert
	(*DeliverCert)(nil),           // 2: aleapb.bcpb.DeliverCert
	(*BcStarted)(nil),             // 3: aleapb.bcpb.BcStarted
	(*FreeSlot)(nil),              // 4: aleapb.bcpb.FreeSlot
	(*EstimateUpdate)(nil),        // 5: aleapb.bcpb.EstimateUpdate
	(*DoFillGap)(nil),             // 6: aleapb.bcpb.DoFillGap
	(*MarkStableProposal)(nil),    // 7: aleapb.bcpb.MarkStableProposal
	(*Message)(nil),               // 8: aleapb.bcpb.Message
	(*FillGapMessage)(nil),        // 9: aleapb.bcpb.FillGapMessage
	(*FillerMessage)(nil),         // 10: aleapb.bcpb.FillerMessage
	(*Slot)(nil),                  // 11: aleapb.bcpb.Slot
	(*Cert)(nil),                  // 12: aleapb.bcpb.Cert
	(*trantorpb.Transaction)(nil), // 13: trantorpb.Transaction
}
var file_aleapb_bcpb_bcpb_proto_depIdxs = []int32{
	1,  // 0: aleapb.bcpb.Event.request_cert:type_name -> aleapb.bcpb.RequestCert
	2,  // 1: aleapb.bcpb.Event.deliver_cert:type_name -> aleapb.bcpb.DeliverCert
	3,  // 2: aleapb.bcpb.Event.bc_started:type_name -> aleapb.bcpb.BcStarted
	4,  // 3: aleapb.bcpb.Event.free_slot:type_name -> aleapb.bcpb.FreeSlot
	5,  // 4: aleapb.bcpb.Event.estimate_update:type_name -> aleapb.bcpb.EstimateUpdate
	6,  // 5: aleapb.bcpb.Event.fill_gap:type_name -> aleapb.bcpb.DoFillGap
	7,  // 6: aleapb.bcpb.Event.mark_stable:type_name -> aleapb.bcpb.MarkStableProposal
	12, // 7: aleapb.bcpb.DeliverCert.cert:type_name -> aleapb.bcpb.Cert
	11, // 8: aleapb.bcpb.BcStarted.slot:type_name -> aleapb.bcpb.Slot
	11, // 9: aleapb.bcpb.FreeSlot.slot:type_name -> aleapb.bcpb.Slot
	11, // 10: aleapb.bcpb.DoFillGap.slot:type_name -> aleapb.bcpb.Slot
	11, // 11: aleapb.bcpb.MarkStableProposal.slot:type_name -> aleapb.bcpb.Slot
	9,  // 12: aleapb.bcpb.Message.fill_gap_message:type_name -> aleapb.bcpb.FillGapMessage
	10, // 13: aleapb.bcpb.Message.filler_message:type_name -> aleapb.bcpb.FillerMessage
	11, // 14: aleapb.bcpb.FillGapMessage.slot:type_name -> aleapb.bcpb.Slot
	12, // 15: aleapb.bcpb.FillerMessage.cert:type_name -> aleapb.bcpb.Cert
	13, // 16: aleapb.bcpb.FillerMessage.txs:type_name -> trantorpb.Transaction
	11, // 17: aleapb.bcpb.Cert.slot:type_name -> aleapb.bcpb.Slot
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_aleapb_bcpb_bcpb_proto_init() }
func file_aleapb_bcpb_bcpb_proto_init() {
	if File_aleapb_bcpb_bcpb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_aleapb_bcpb_bcpb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aleapb_bcpb_bcpb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestCert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aleapb_bcpb_bcpb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliverCert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aleapb_bcpb_bcpb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BcStarted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aleapb_bcpb_bcpb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FreeSlot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aleapb_bcpb_bcpb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstimateUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aleapb_bcpb_bcpb_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoFillGap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aleapb_bcpb_bcpb_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkStableProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aleapb_bcpb_bcpb_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aleapb_bcpb_bcpb_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FillGapMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aleapb_bcpb_bcpb_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FillerMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aleapb_bcpb_bcpb_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Slot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aleapb_bcpb_bcpb_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_aleapb_bcpb_bcpb_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Event_RequestCert)(nil),
		(*Event_DeliverCert)(nil),
		(*Event_BcStarted)(nil),
		(*Event_FreeSlot)(nil),
		(*Event_EstimateUpdate)(nil),
		(*Event_FillGap)(nil),
		(*Event_MarkStable)(nil),
	}
	file_aleapb_bcpb_bcpb_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*Message_FillGapMessage)(nil),
		(*Message_FillerMessage)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_aleapb_bcpb_bcpb_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_aleapb_bcpb_bcpb_proto_goTypes,
		DependencyIndexes: file_aleapb_bcpb_bcpb_proto_depIdxs,
		MessageInfos:      file_aleapb_bcpb_bcpb_proto_msgTypes,
	}.Build()
	File_aleapb_bcpb_bcpb_proto = out.File
	file_aleapb_bcpb_bcpb_proto_rawDesc = nil
	file_aleapb_bcpb_bcpb_proto_goTypes = nil
	file_aleapb_bcpb_bcpb_proto_depIdxs = nil
}
