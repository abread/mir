// Code generated by Mir codegen. DO NOT EDIT.

package directorpbdsl

import (
	dsl "github.com/filecoin-project/mir/pkg/dsl"
	types "github.com/filecoin-project/mir/pkg/pb/aleapb/directorpb/types"
	dsl1 "github.com/filecoin-project/mir/pkg/pb/messagepb/dsl"
	types2 "github.com/filecoin-project/mir/pkg/pb/messagepb/types"
	types3 "github.com/filecoin-project/mir/pkg/pb/threshcheckpointpb/types"
	types1 "github.com/filecoin-project/mir/pkg/types"
)

// Module-specific dsl functions for processing net messages.

func UponMessageReceived[W types.Message_TypeWrapper[M], M any](m dsl.Module, handler func(from types1.NodeID, msg *M) error) {
	dsl1.UponMessageReceived[*types2.Message_AleaDirector](m, func(from types1.NodeID, msg *types.Message) error {
		w, ok := msg.Type.(W)
		if !ok {
			return nil
		}

		return handler(from, w.Unwrap())
	})
}

func UponStableCheckpointReceived(m dsl.Module, handler func(from types1.NodeID, checkpoint *types3.StableCheckpoint) error) {
	UponMessageReceived[*types.Message_StableCheckpoint](m, func(from types1.NodeID, msg *types.StableCheckpoint) error {
		return handler(from, msg.Checkpoint)
	})
}
