// Code generated by Mir codegen. DO NOT EDIT.

package directorpbdsl

import (
	dsl "github.com/filecoin-project/mir/pkg/dsl"
	events "github.com/filecoin-project/mir/pkg/pb/aleapb/directorpb/events"
	types1 "github.com/filecoin-project/mir/pkg/trantor/types"
	types "github.com/filecoin-project/mir/pkg/types"
)

// Module-specific dsl functions for emitting events.

func Heartbeat(m dsl.Module, destModule types.ModuleID) {
	dsl.EmitEvent(m, events.Heartbeat(destModule))
}

func NewEpoch(m dsl.Module, destModule types.ModuleID, epoch types1.EpochNr) {
	dsl.EmitEvent(m, events.NewEpoch(destModule, epoch))
}

func GCEpochs(m dsl.Module, destModule types.ModuleID, minEpoch types1.EpochNr) {
	dsl.EmitEvent(m, events.GCEpochs(destModule, minEpoch))
}

func HelpNode(m dsl.Module, destModule types.ModuleID, nodeId types.NodeID) {
	dsl.EmitEvent(m, events.HelpNode(destModule, nodeId))
}
